import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,d as t}from"./app-DANWba4q.js";const p={},e=t(`<div class="hint-container tip"><p class="hint-container-title">拉个Star</p><ul><li>如果<a href="https://github.com/kkwalking/person-database" target="blank">本知识库</a>的内容帮助到你，还请点个免费的Star，感谢。传送门：<a href="https://github.com/kkwalking/person-database" target="blank">GitHub</a></li></ul></div><p>使用OkHttp来进行http调用，通常会使用池化机制。大家都知道，Http是基于TCP的，而TCP是面向连接的。TCP链接的建立需要经历三次握手，TCP链接的释放需要经过四次挥手。因而，连接的建立比较耗费时间和资源。所以通常会将这些链接进行复用，表现在Http层面就是使用Connection:keep-alive，再在代码中将这些已经建立的连接保存起来，后续如果是同一个主机地址的便可以复用。这就是OKHttp的连接池机制。</p><p>最近在Spring Boot项目中，我也是用了OkHttp来发送http请求调用，并配置了一个连接池。代码如下：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token annotation punctuation">@Configuration</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OkHttpConfig</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Bean</span>  
    <span class="token keyword">public</span> <span class="token class-name">ConnectionPool</span> <span class="token function">pool</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ConnectionPool</span><span class="token punctuation">(</span>  
        <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">5L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">MINUTES</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Bean</span>  
    <span class="token keyword">public</span> <span class="token class-name">OkHttpClient</span> <span class="token function">okHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">sslSocketFactory</span><span class="token punctuation">(</span><span class="token function">sslSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">x509TrustManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
        <span class="token comment">// 配置连接池,复用connection  </span>
        <span class="token punctuation">.</span><span class="token function">connectionPool</span><span class="token punctuation">(</span><span class="token function">pool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">connectTimeout</span><span class="token punctuation">(</span><span class="token number">30L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">readTimeout</span><span class="token punctuation">(</span><span class="token number">30L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">writeTimeout</span><span class="token punctuation">(</span><span class="token number">30L</span><span class="token punctuation">,</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">retryOnConnectionFailure</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然而在使用项目过程中，发现时不时请求会出现失败，方便大家搜索到，我把异常结果放上来：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>IOException</span><span class="token operator">:</span> unexpected end of stream on http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>xxx<span class="token punctuation">.</span>xxx<span class="token operator">/</span>api<span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http1<span class="token punctuation">.</span></span>Http1ExchangeCodec</span><span class="token punctuation">.</span><span class="token function">readResponseHeaders</span><span class="token punctuation">(</span><span class="token class-name">Http1ExchangeCodec</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">202</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span>Exchange</span><span class="token punctuation">.</span><span class="token function">readResponseHeaders</span><span class="token punctuation">(</span><span class="token class-name">Exchange</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">106</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>CallServerInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">CallServerInterceptor</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">79</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>RealInterceptorChain</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">RealInterceptorChain</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span>ConnectInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">ConnectInterceptor</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">34</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>RealInterceptorChain</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">RealInterceptorChain</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>cache<span class="token punctuation">.</span></span>CacheInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">CacheInterceptor</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">95</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>RealInterceptorChain</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">RealInterceptorChain</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>BridgeInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">BridgeInterceptor</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">83</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>RealInterceptorChain</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">RealInterceptorChain</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>RetryAndFollowUpInterceptor</span><span class="token punctuation">.</span><span class="token function">intercept</span><span class="token punctuation">(</span><span class="token class-name">RetryAndFollowUpInterceptor</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">76</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span>RealInterceptorChain</span><span class="token punctuation">.</span><span class="token function">proceed</span><span class="token punctuation">(</span><span class="token class-name">RealInterceptorChain</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">109</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span>RealCall</span><span class="token punctuation">.</span>getResponseWithInterceptorChain$<span class="token function">okhttp</span><span class="token punctuation">(</span><span class="token class-name">RealCall</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">201</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>connection<span class="token punctuation">.</span></span>RealCall</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">RealCall</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">154</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>eshore<span class="token punctuation">.</span>quanmeiti<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OkHttpService</span><span class="token punctuation">.</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token class-name">OkHttpService</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">194</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>eshore<span class="token punctuation">.</span>quanmeiti<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>service<span class="token punctuation">.</span>impl<span class="token punctuation">.</span></span>OkHttpService</span><span class="token punctuation">.</span><span class="token function">doGet</span><span class="token punctuation">(</span><span class="token class-name">OkHttpService</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">71</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>eshore<span class="token punctuation">.</span>quanmeiti<span class="token punctuation">.</span>gateway<span class="token punctuation">.</span>common<span class="token punctuation">.</span>pool<span class="token punctuation">.</span></span>GatewayTask</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">GatewayTask</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">73</span><span class="token punctuation">)</span>
	at java<span class="token punctuation">.</span>base<span class="token operator">/</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span><span class="token punctuation">.</span><span class="token function">runWorker</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">1128</span><span class="token punctuation">)</span>
	at java<span class="token punctuation">.</span>base<span class="token operator">/</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>concurrent<span class="token punctuation">.</span></span>ThreadPoolExecutor</span>$<span class="token class-name">Worker</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">ThreadPoolExecutor</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">628</span><span class="token punctuation">)</span>
	at java<span class="token punctuation">.</span>base<span class="token operator">/</span><span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Thread</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">Thread</span><span class="token punctuation">.</span>java<span class="token operator">:</span><span class="token number">834</span><span class="token punctuation">)</span>
<span class="token class-name">Caused</span> by<span class="token operator">:</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span>EOFException</span><span class="token operator">:</span> \\n not found<span class="token operator">:</span> limit<span class="token operator">=</span><span class="token number">0</span> content<span class="token operator">=</span>…
	at <span class="token class-name"><span class="token namespace">okio<span class="token punctuation">.</span></span>RealBufferedSource</span><span class="token punctuation">.</span><span class="token function">readUtf8LineStrict</span><span class="token punctuation">(</span><span class="token class-name">RealBufferedSource</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">332</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http1<span class="token punctuation">.</span></span>HeadersReader</span><span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token class-name">HeadersReader</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">29</span><span class="token punctuation">)</span>
	at <span class="token class-name"><span class="token namespace">okhttp3<span class="token punctuation">.</span>internal<span class="token punctuation">.</span>http1<span class="token punctuation">.</span></span>Http1ExchangeCodec</span><span class="token punctuation">.</span><span class="token function">readResponseHeaders</span><span class="token punctuation">(</span><span class="token class-name">Http1ExchangeCodec</span><span class="token punctuation">.</span>kt<span class="token operator">:</span><span class="token number">178</span><span class="token punctuation">)</span>
	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token number">19</span> more
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在stackoverflow上查到了原因，大概就是服务端端(相对来说我们是客户端)没有正确处理<code>Connection:keep-alive</code>长连接。服务端那边异常关闭了这条TCP连接，导致了我们这边请求就出错了。</p><p>解决方案有两种。</p><p>第一种：那我们不用长连接了，发送请求的时候主动添加上请求头<code>Connection:close</code>, 一条连接就变成一次性的，发完请求就关闭。</p><p>一开始我用的这种方案，问题是解决了。后面转念一想，那我的连接池就废了呀，每次请求完都把连接释放掉，下次请求就要重新建立一条连接，连接池的作用就无了。</p><p>因此，后面我采用了第二种方案。</p><p>第二种方案：将OKHttpClient的一项配置retryOnConnectionFailure设置为true。该配置的意思是启用连接失败重试。</p><p>代码如下:</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>    <span class="token annotation punctuation">@Bean</span>  
    <span class="token keyword">public</span> <span class="token class-name">OkHttpClient</span> <span class="token function">okHttpClient</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  
        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OkHttpClient<span class="token punctuation">.</span>Builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">sslSocketFactory</span><span class="token punctuation">(</span><span class="token function">sslSocketFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">x509TrustManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
        <span class="token comment">// 配置连接池,复用connection  </span>
        <span class="token punctuation">.</span><span class="token function">connectionPool</span><span class="token punctuation">(</span><span class="token function">pool</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">connectTimeout</span><span class="token punctuation">(</span><span class="token number">30L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">readTimeout</span><span class="token punctuation">(</span><span class="token number">30L</span><span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">writeTimeout</span><span class="token punctuation">(</span><span class="token number">30L</span><span class="token punctuation">,</span><span class="token class-name">TimeUnit</span><span class="token punctuation">.</span><span class="token constant">SECONDS</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">retryOnConnectionFailure</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>  
        <span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实该配置是默认启用的，奈何我一开始配置的时候主动给关闭了 😃</p><p>配置之后，我们还是能用启用长连接，因此启用连接池是有意义的。当偶尔出现由于服务端错误关闭该TCP连接时，OkHttp便会重试，重新建立一条新的TCP连接来复用。</p>`,16),o=[e];function c(l,u){return a(),s("div",null,o)}const r=n(p,[["render",c],["__file","okhttp-conncection-pool-problem.html.vue"]]),m=JSON.parse('{"path":"/java/okhttp-conncection-pool-problem.html","title":"OkHttp开启线程池复用连接导致的EOFException解决方案","lang":"zh-CN","frontmatter":{"title":"OkHttp开启线程池复用连接导致的EOFException解决方案","date":"2024-05-27T00:00:00.000Z","tag":["Java","OkHttp"],"description":"拉个Star 如果本知识库的内容帮助到你，还请点个免费的Star，感谢。传送门：GitHub 使用OkHttp来进行http调用，通常会使用池化机制。大家都知道，Http是基于TCP的，而TCP是面向连接的。TCP链接的建立需要经历三次握手，TCP链接的释放需要经过四次挥手。因而，连接的建立比较耗费时间和资源。所以通常会将这些链接进行复用，表现在Htt...","head":[["meta",{"property":"og:url","content":"https://kkwalking.github.com/person-database/person-database/java/okhttp-conncection-pool-problem.html"}],["meta",{"property":"og:site_name","content":"zzk的个人知识库"}],["meta",{"property":"og:title","content":"OkHttp开启线程池复用连接导致的EOFException解决方案"}],["meta",{"property":"og:description","content":"拉个Star 如果本知识库的内容帮助到你，还请点个免费的Star，感谢。传送门：GitHub 使用OkHttp来进行http调用，通常会使用池化机制。大家都知道，Http是基于TCP的，而TCP是面向连接的。TCP链接的建立需要经历三次握手，TCP链接的释放需要经过四次挥手。因而，连接的建立比较耗费时间和资源。所以通常会将这些链接进行复用，表现在Htt..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T07:35:08.000Z"}],["meta",{"property":"article:author","content":"zzk"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"OkHttp"}],["meta",{"property":"article:published_time","content":"2024-05-27T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-27T07:35:08.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OkHttp开启线程池复用连接导致的EOFException解决方案\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-05-27T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-27T07:35:08.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"zzk\\",\\"url\\":\\"https://github.com/kkwalking\\"}]}"]]},"headers":[],"git":{"createdTime":1716795308000,"updatedTime":1716795308000,"contributors":[{"name":"zhouzekun","email":"zhouzk3@chinatelecom.cn","commits":1}]},"readingTime":{"minutes":2.76,"words":827},"filePathRelative":"java/okhttp-conncection-pool-problem.md","localizedDate":"2024年5月27日","excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">拉个Star</p>\\n<ul>\\n<li>如果<a href=\\"https://github.com/kkwalking/person-database\\" target=\\"blank\\">本知识库</a>的内容帮助到你，还请点个免费的Star，感谢。传送门：<a href=\\"https://github.com/kkwalking/person-database\\" target=\\"blank\\">GitHub</a></li>\\n</ul>\\n</div>\\n<p>使用OkHttp来进行http调用，通常会使用池化机制。大家都知道，Http是基于TCP的，而TCP是面向连接的。TCP链接的建立需要经历三次握手，TCP链接的释放需要经过四次挥手。因而，连接的建立比较耗费时间和资源。所以通常会将这些链接进行复用，表现在Http层面就是使用Connection:keep-alive，再在代码中将这些已经建立的连接保存起来，后续如果是同一个主机地址的便可以复用。这就是OKHttp的连接池机制。</p>","autoDesc":true}');export{r as comp,m as data};
